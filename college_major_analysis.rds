p3(5)
plot(x, y, pch= 19, col= rgb(0, 0.5, 0.5))
plot(x, y, pch= 19, col= rgb(0, 0.5, 0.5, 0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
bye()
bye
bye()
exit()
quit()
library(swirl)
siwrl()
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv~.)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(color = aes(drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g = geom_point(aes(color = drv), size = 2, alpha = 1/2) +geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) +geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3, 3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diaomonds, binwidth = 18497/30)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", aes(color = cut))
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut)+ geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut)+ geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+ facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
?lattice
?trellis.par.set
?panel.abline
quit()
setwd()
install.packages("manipulate")
library(swirl)
install_from_swirl("Statistical inference")
install_from_swirl("Statistical Inference")
swirl()
11/12
deck
52
4/52
0
12/52
2/51
0.64
64%
0.64
mypdf
integrate(mypdf, lower = 0,upper=1.6)
sqrt(2)
0.000997
0.999*0.015
(0.000997)/(0.000997+0.014985)
3.5
expect_dice
dice_high
play
info()
play()
dice_fair
nxt()
expect_dice(dice_high)
expect_dice(dice_low)
play()
edh
nxt()
0.5*(edh+edl)
4/3
myfunc
integrate(myfunc, lower = 0, upper = 2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
0.75/(0.75+0.48*0.7)
0.3*0.75/(0.3*0.75+0.48*0.7)
clear()
nosim <- 1000
n <- 10
rnorm(nosimm*n)
rnorm(nosim*n)
?rnorm
?matrix
matrix(rnorm(nosim*n),nosim)
test <- matrix(rnorm(nosim*n),nosim)
head(test)
?apply
apply(matrix(rnorm(nosim*n),nosim),1,mean)
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
?sd
sd
?vary
?var
var
c_cov
?c_cov
var(c(1,2,3,1,2,3))
sd(c(1,2,3,1,2,3))
sd(c(0,1,0,1,0,1,0,1))
var(c(0,1,0,1,0,1,0,1))
0.5*0.5
test <- cbind(rep(0,50),rep(1,50))
test <- c(rep(0,50),rep(1,50))
tes
test
var(test)
sd(test)
stderr(test)
?stderr
?var
?sd
error
?er
?error
?standardError
?serror
std.error
?std.error
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sd(apply(matrix(rnorm(nosim*n),nosim),1,mean))
sqrt(n)
1/sqrt(n)
?runif
runif(10)
runif(nosim*n)
matrix(runif(nosim*n))
apply(matrix(runif(nosim*n),nosim),1,mean)
sd(apply(matrix(runif(nosim*n),nosim),1,mean))
1/sqrt(12*n)
poisson(4)
rpois(nosim*n)
rpois(nosim*n,4)
matrix(rpois(nosim*n,4),nosim)
apply(matrix(rpois(nosim*n,4),nosim),1,mean)
sd(apply(matrix(rpois(nosim*n,4),nosim),1,mean))
1/sqrt(12*n)
2/sqrt(n)
1/2/sqrt()
1/2/sqrt(n)
library(UsingR)
install.packages("UsingR")
install.packages("UsingR")
install.packages("UsingR")
install.packages("UsingR")
install.packages("UsingR")
library(UsingR)
data(father.son)
data
data(father.son)
data('father.son')
library(UsingR)
data
load(father.son)
library(UsingR)
q()
library(UsingR)
install.packages("tibble")
update.packages()
update.packages(ask = FALSE)
library(UsingR)
data(father.son)
x <- father.son$sheight
hist(x)
var(x)
var(x)/length(x)
sd(x)
sd(x)/sqrt(length(x))
0.5^8
*9
9*0.5^8
?pbinom
pbinom(6,size = 8,prob = 0.5, lower.tail = FALSE)
rpois(100,1)
qnorm(0.95, 0,1)
qnorm(x, 0,1)
qnorm(0.05, 0,1, lower.tail = FALSE)
pnorm(1160, 1020,50, lower.tail = FALSE)
pnorm(2.8, lower.tail = FALSE)
qnorm(0.75, lower.tail = FALSE)
qnorm(0.75, lower.tail = TURE)
qnorm(0.75, lower.tail = TRUE)
qnorm(0.75, mean = 1020, sd=50, lower.tail = TRUE)
rpois(100)
rpois(100,0)
rpois(100,5)
rpois(100,5)
ppois(100,5)
rnorm
rpois
rbinom
rbinom(1,2,)
rbinom(1,2,1)
rbinom(1,2,5)
rbinom(100,2,5)
rbinom(100,20,5)
?rbinom
clear
q()
install.packages("UsingR")
install.packages("installR")
install.packages("installr")
?installr
library(installr)
?installr
updateR()
data(mtcars)
mtcars$wt <- mtcars$wt/2
mod<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
fit<-lm(mpg~wt,data=mtcars)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1,1)*qt(.975, mod$df)*sumCoef[2,2]
fit1 <- lm(mpg~wt, mtcars)
fit2 <- lm(mpg~wt -1, mtcars)
fit_num <- lm(mpg~wt, mtcars)
fit_denom <- lm(mpg~1, mtcars)
sum(fit_num$residuals^2)/sum(fit_denom$residuals^2)
lm(mpg~., mtcars)
fit <- lm(mpg~., mtcars)
summary(fit)
rm(ls())
rm(list=ls())
datasets::USPersonalExpenditure
datasets::Titanic
data("Titanic")
head(Titanic)
data.frame(Titanic)
Titanic <- data.frame(Titanic)
lm(Survived~.,Titanic)
glm(Survived~.,Titanic)
rm(Titanic)
data(mtcars)
lm(mpg~.,mtcars)
fit <- lm(mpg~.,mtcars)
summary(fit)
data(Galton)
usingR::Galton
library(UsingR)
data("SAT")
head(SAT)
fit_all <- lm(total~., SAT)
summary(fit_all)
data("swiss")
head(swiss)
fit_all <- lm(fertility~., swiss)
fit_all <- lm(Fertility~., swiss)
summary(fit_all)
fi_all_2 <- lm(Fertility~Education+Catholic+Infant.Mortality+Agriculture+Examination, swiss)
summary(fit_all_2)
fi_all_2 <- lm(Fertility~Education+Catholic+Infant.Mortality+Agriculture+Examination, swiss)
summary(fit_all_2)
fit_all_2 <- lm(Fertility~Education+Catholic+Infant.Mortality+Agriculture+Examination, swiss)
summary(fit_all_2)
summary(fit_all)$coefficients
summary(fit_all_2)$coefficients
ggplot(swiss, aes(Fertility, Education)) + geom_point()
ggplot(swiss, aes(Fertility, Education)) + geom_point() +
geom_smooth(method = 'lm')
version
version()
version
RStudio.Version()
install.packages("devtools")
devtools::install_github("jhudsl/collegeIncome")
library(collegeIncome)
data(college)
devtools::install_github("jhudsl/matahari")
library(matahari)
dance_start(value = FALSE, contents = FALSE)
dim(college)
names(college)
# Want to know if there is signifcant affect of major category on income
head(college$rank)
# Want to know if there is signifcant affect of major category on income
head(college$rank, 20)
head(college[,1:6])
head(college[,7:12])
head(college[,13:19])
plot(college$median)
summary(lm(median~factor(major_category)+rank+perc_employed_fulltime_yearround))$coef
summary(lm(median~factor(major_category)+rank+perc_employed_fulltime_yearround, college))$coef
unique(college$major_category)
fit1 <- lm(median~rank, college)
fit2 <- lm(median~rank+factor(major_category), college)
anova(fit1, fit2)
fit2 <- lm(median~rank+factor(major_category) + factor(major_cateogry)*rank, college)
anova(fit1, fit2)
fit2 <- lm(median~rank+factor(major_category) + factor(major_category)*rank, college)
anova(fit1, fit2)
summary(lm(median~., college))$coef
names(college)
fit1 <- lm(median~perc_women+perc_employed_fulltime+perc_low_wage_jobs+total+perc_college_jobs+perc_employed, college)
fit1 <- lm(median~perc_women+perc_employed_fulltime+perc_low_wage_jobs+total+perc_college_jobs+perc_employed, data = college)
is.na(college)
a <- is.na(college)
dim(a)
sapply(a, sum)
head(a)
sum(a[,1])
sum(a[,2])
sum(a[,3])
a <- complete.cases(college)
dim(a)
head(a)
sum(a)
dim(college)
college[!complete.cases(college),]
college[!complete.cases(college),c(5:19)]
college_full <- college[complete.cases(college),]
fit1 <- lm(median~perc_women+perc_employed_fulltime+perc_low_wage_jobs+total+perc_college_jobs+perc_employed, data = college_full)
summary(fit1)$coef
fit1 <- lm(median~., college_full)
summary(fit1)$coef
fit1 <- lm(median~rank, college_full)
summary(fit1)$coef
# Cannot use rank, this is just a rank by income not the school's ranking
colnames(college)
college_2 %>% college_full %>% select(-rank)
library(dplyr)
college_2 %>% college_full %>% select(-rank)
college_2 <- college_full %>% select(-rank)
college_2 <- college_full %>%
select(-rank, -major_code, -major, -sample_size, -p25th, -p75th)
head(college_2)
college_2 <- college_full %>%
select(-rank, -major_code, -major, -sample_size, -p25th, -p75th, -major_category)
head(college_2)
fit1 <- lm(median~., college_2)
summary(fit1)
college_2 <- college_full %>%
select(-rank, -major_code, -major, -sample_size, -p25th, -p75th, -major_category,
-perc_men, -perc_unemployed)
fit1 <- lm(median~., college_2)
summary(fit1)
fit1 <- lm(median~perc_employed_fulltime, college_2)
fit2 <- lm(median~perc_employed_fulltime+perc_employed_parttime, college_2)
anova(fit1, fit2)
plot(college_2$perc_employed_fulltime, college$perc_employed_parttime)
plot(x = college_2$perc_employed_fulltime, y = college$perc_employed_parttime)
plot(x = college_2$perc_employed_fulltime, y = college_2$perc_employed_parttime)
plot(college_2$perc_employed_fulltime+college_2$perc_employed_parttime)
#even though it seems to improve the fit, I don't think that the percent
#even though it seems to improve the fit, I don't think that the percent
# employed full time and the percent employed part time should both be included
college_2 <- college_full %>%
select(-rank, -major_code, -major, -sample_size, -p25th, -p75th, -major_category,
-perc_men, -perc_unemployed, -perc_employed_parttime, -perc_employed_fulltime_yearround)
fit1 <- lm(median~., college_2)
summary(fit1)
college_2 <- college_full %>%
select(-rank, -major_code, -major, -sample_size, -p25th, -p75th, -major_category,
-perc_men, -perc_unemployed, -perc_employed_parttime, -perc_employed_fulltime_yearround,
-perc_non_college_jobs)
fit1 <- lm(median~., college_2)
summary(fit1)
lm(median~factor(major_category),college_full)
lm(median~factor(major_category)+perc_employed_fulltime,college_full)
summary(lm(median~factor(major_category)+perc_employed_fulltime,college_full))$coef
z <- relevel(college_full$major_category, Arts)
z <- relevel(factor(college_full$major_category, Arts))
z <- relevel(factor(college_full$major_category, 'Arts'))
z <- relevel(factor(college_full$major_category), 'Arts')
summary(lm(median~z+perc_employed_fulltime,college_full))$coef
summary(lm(median~z+perc_employed_fulltime+perc_women+perc_low_income, college_full))
names(colege)
names(college)
summary(lm(median~z+perc_employed_fulltime+perc_women+perc_low_wage_jobs, college_full))
summary(lm(median~z,college_full))
names(college)
summary(lm(p75th~z,college_full))
summary(lm(p25th~z,college_full))
dance_save("~/Desktop/college_major_analysis.rds")
dance_save("~/Desktop/college_major_analysis.rds")
dance_start(value = FALSE, contents = FALSE)
head(college[,1:6])
head(college[,7:12])
head(college[,13:19])
plot(college$median)
unique(college$major_category)
z <- reorder(factor(college$major_category))
z <- reorder(factor(college$major_category),"Arts")
z <- relevel(factor(college$major_category), "Arts")
cbind(college,z)
college <- cbind(college,z)
fit1 <- lm(median~z, college)
summary(fit1)$coef
fit2 <- lm(median~z+perc_employed_fulltime, college)
college <- cbind(college,z) %>% filter(complete.cases(college))
collge <- complete.cases(college)
fit1 <- lm(median~z, college)
fit2 <- lm(median~z+perc_employed_fulltime, college)
head(college)
collge <- college[complete.cases(college),]
head(collge)
dim(college)
fim(collge)
dim(collge)
fit1 <- lm(median~z, collge)
fit2 <- lm(median~z+perc_employed_fulltime, collge)
anova(fit1,fit2)
fit2 <- lm(median~z*perc_employed_fulltime, collge)
summary(fit2)
fit2 <- lm(median~z+perc_employed_fulltime+z*perc_employed_fulltime, collge)
summary(fit2)
fit2 <- lm(median~z+perc_women, collge)
anova(fit1,fit2)
colnames(college)
summary(lm(median~., data = select(collge, -c(major_category, majorcode, p75th,
p25th, sample_size, perc_non_college_jobs,
perc_unemployed, perc_employed_parttime))))
summary(lm(median~., data = select(collge, -c(major_category, major_code, p75th,
p25th, sample_size, perc_non_college_jobs,
perc_unemployed, perc_employed_parttime))))
summary(lm(median~., data = select(collge, -c(major_category, major_code, p75th,
p25th, sample_size, perc_non_college_jobs,
perc_unemployed, perc_employed_parttime,rank))))
summary(lm(median~., data = select(collge, -c(major_category, major_code, p75th,
p25th, sample_size, perc_non_college_jobs,
perc_unemployed, perc_employed_parttime,
major, rank))))
summary(lm(median~., data = select(collge, -c(major_category, major_code, p75th,
p25th, sample_size, perc_non_college_jobs,
perc_unemployed, perc_employed_parttime,
major, rank,perc_men))))
z <- relevel(factor(college$major_category), "Business")
data("college")
z <- relevel(factor(college$major_category), "Business")
college <- cbind(college,z)
college <- college[complete.cases(college),]
fit1 <- lm(median~perc_employed_fulltime_yearround, college)
summary(fit1)$coef
fit2 <- lm(median~perc_employed_fulltime_yearround + z, college)
anova(fit1,fit2)
summary(fit2)
data(college)
z <- relevel(factor(college$major_category), "Health")
college <- cbind(college,z)
college <- college[complete.cases(college),]
fit1 <- lm(median~perc_employed_fulltime_yearround, college)
fit2 <- lm(median~perc_employed_fulltime_yearround + z, college)
summary(fit2)
fit3 <- lm(median~z, college)
fit4 <- lm(median~z+perc_employed_fulltime_yearround, college)
anova(fit3, fit4)
dance_save("~/Desktop/college_major_analysis.rds")
savehistory("C:/Users/Kelly/Desktop/college_major_analysis.rds")
